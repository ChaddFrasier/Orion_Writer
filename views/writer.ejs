<html>

    <head>
        <title>Caption Editor</title>
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <link rel="stylesheet" type="text/css" href="css/pips.css">


        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
            integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

        <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.0.0/jquery.min.js"></script>


        
    </head>
    <style>
            .metadata:hover{
                cursor:copy;
            }
    </style>
    <body>
        <img src="../images/usgsLogo.png" class="float-md-left" width="10%" height="auto" style="margin: 0%; padding: 0%"><br>
        
            <div class="container" style="height: 15rem; width: 100%; padding: 0; border: 0 solid red;"> 
                <div class="jumbotron text-center" style="padding: 2rem;">
                    <h1 class="display-4">Upload Successful</h1>
                    <p class="lead">Edit in the bottom box using tags in the middle box</p>
                    <a class="btn btn-primary btn-lg" href="/" role="button">Upload New Cube File</a>
                </div>
            </div>

            <div class="container float-center" style="width: 100rem; border: 0 solid blue;">
                    <div id="template-output" class="text-center form-group metadata">
                            <label for="template-text-output">
                                <h3 class="display-5 alert alert-secondary">Template Text Output</h2>
                            </label>
                            <textarea readonly id="template-text-output" class="form-control bg-white text-dark metadata"
                                style="resize: vertical; font-size: 22px;" rows="7"></textarea>
                                <br/>
        
                            <form class="lg-form text-center float-right">
                                <div class="form-group">
                                    <a class="btn btn-primary text-white btn-lg" role="button" id="link" download="<%=outputName%>">Download
                                        Caption</a>
                                </div>
                            </form>
                        </div>

                <br/>
                <br/>
                <div id="metadata" style = "display: none;" class="text-center green-border-focus">
                    <label for="metadata-text">
                        <h2>Metadata Output DICTSTRING </h2>
                    </label>
                    <textarea readonly id="metadata-text" class="form-control bg-white text-dark"
                        style="resize: vertical; font-size: 22px;"><%= dictionaryString %></textarea>
                </div>
                
                <div id="tags"  style = "display: none;" class="text-center green-border-focus">
                    <label for="all-tag-text">
                        <h2>All Tag Info CSVSTRING</h2>
                    </label>
                    <textarea readonly id="all-tag-text" class="form-control bg-white text-dark"
                        style="resize: vertical; font-size: 22px;"><%= wholeData %></textarea>
                </div>

                <div id="metadata-tags"  style = "display: none;" class="text-center green-border-focus">
                    <label for="metadataTagArea">
                        <h2>Metadata Tags</h2>
                    </label>
                    <textarea readonly id="metadataTagArea" class="form-control bg-white text-dark"
                        style="resize: vertical; font-size: 22px;"></textarea>
                </div>

                <div id="important-tags" style = "display: none;" class="text-center green-border-focus">
                    <label for="allTagArea">
                        <h2>allTagArea</h2>
                    </label>
                    <textarea readonly id="allTagArea" class="form-control bg-white text-dark"
                        style="resize: vertical; font-size: 22px;"></textarea>
                </div>
                <br/>
                <div id="test-metadata" class="text-center form-group">
                    <label for="test">
                        <h3 class="display-5 float-center alert alert-secondary">Usable Tags</h2>
                    </label>
                    <input id="filterInput" class="form-control" type="text" placeholder="Filter Tags" style="background-color: rgba(255,255,255);">
                    <br/>
                    <textarea readonly id="test" class="form-control bg-white text-dark"
                        style="resize: vertical; font-size: 22px;" rows="7"></textarea>
                    <button id="button-more-tags" class="btn btn-md btn-secondary" onclick="showMoreTags()">Show Important Tags</button>
                    <br/>
                    <form action="/csv" method='POST' class="lg-form text-center float-right">
                        <div class="lg-form text-center">
                            <input type="hidden" value="<%= wholeData %>" id="passedTXT">
                            <input type="hidden" value="<%= csvString %>" id= "csvStringPassed">
                            <input type="submit" value="Save Metadata CSV" class="btn btn-primary btn-lg" />
                        </div>
                    </form>
                </div>
                <br/>
                <br/>
                <div id="template" class="text-center form-group" style="padding-top:.5rem;">
                        <label for="template-text">
                            <h3 class="display-5 alert alert-secondary">Edit Text</h2>
                        </label>
                        <textarea id="template-text" class="form-control bg-white text-dark" rows="7"
                            style="resize: vertical; font-size: 22px; "> <%= templateText %> </textarea>
                    </div>
            </div>
            <br/>
            <br/>
            <br/>
            <form method="POST" action="/showImage" class="lg-form text-center">
                <div class="form-group">
                    <input type="hidden" value= '<%= dictionaryString  %>' name="image_string">
                    <input type="submit" value="Display Image" class="btn btn-primary btn-lg"
                    onclick="loaderActivate()" />
                </div>
            </form>
            <br/>
            <div id="loading" class="float-md-center text-center lead" style="visibility:visible">
                <img src="../images/loading.gif" class='float-center;' height="125px" weight="135px"/><br>Loading
            </div>
        

        <br/>
        <br/>
        <script type="text/javascript">
            var loader = document.getElementById('loading');

            
            // set the template information 
            function setOutput() {
                let getTemplate = document.getElementById("template-text").value;
                document.getElementById("template-text-output").innerHTML = getTemplate;
                output();
            }
            
            // Gets important keys and values
            function getMetadata() {
                var metaDataString = document.getElementById("metadata-text").value;
                var metaDataArea = document.getElementById("metadataTagArea");
                metaDataArea.value = "";
                var jsonData = JSON.parse(metaDataString);
                
                //'StartTime': '1997-10-20T10:58:37.46'
                for (key in jsonData) {
                    //console.log('key: ' + key + ':val:' + jsonData[key]);
                    if(key != undefined){  
                        let str = keyToTag(key) + ": " + jsonData[key] + "\n";
                        metaDataArea.value += str;
                    }
                }

            }
            // Gets All Tags
            function getAllTags() {
                var metaData = document.getElementById("passedTXT").value;
                var metaDataArea = document.getElementById("allTagArea");
                metaDataArea.value = "";
                metaData = JSON.parse(metaData);
                for (key in metaData) {
                    let str = keyToTag(key) + ": " + metaData[key].toString().trim() + "\n";
                    metaDataArea.value += str;
                }
            }

            // Converts Key to Tag
            function keyToTag(key) {
                var tag = "[[ " + key + " ]]";
                return tag;
            }
            // punctuation to be ignored
            let unwantedPunc = ['.',',','-','?','!','%','#','@','$',':',';'];

            // boolean value that tells if there is puctuation in the key 
            function removePunctuation(key){
                for(index in unwantedPunc){
                    if(key[key.length - 1] === unwantedPunc[index] || key[0] === unwantedPunc[index]){
                        return true;
                    }
                }
                return false;
            }

            // Return Metadata Val from Key
            function getMetadataVal(key) {
                // get both data objects
                var allMetaData = JSON.parse(document.getElementById("all-tag-text").value);
                var impData = JSON.parse(document.getElementById("metadata-text").value);

                // combine the JSONs into 1 object
                allMetaData = Object.assign(allMetaData,impData);
                // loop through all data 
                for(datakey in allMetaData){
                    //if the key is found
                    if(datakey === key){
                        //trim the data and return the result
                        return allMetaData[datakey].trim();
                    } 
                    // if the key has puncuation in it
                    else if(removePunctuation(key)){
                        // remove the punctuation from the ends and add it back after the data is added
                        if(key.substring(0,key.length-1) === datakey){
                            return allMetaData[datakey] + key[key.length-1];
                        }
                        else if(key.substring(1,key.length) === datakey){
                            return  key[0]+ allMetaData[datakey];
                        }
                    }
                }
                return key;
            }

            // prototype function for strings to replace all occurances of 1 string with another 
            String.prototype.replaceAll = function (find, replace) {
                var str = this;
                return str.replace(new RegExp(find.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&'), 'g'), replace);
            }

            // set the output in the text box from the tempplate text
            function output() {
                var tempText = document.getElementById("template-text").value;

                //Find values of keys one by one, replace "[[...]]" with their value
                var tempArr = tempText.split(' ');
                for(var i=0; i<tempArr.length; i++){
                    
                    // get the val of the tag
                    tempArr[i] = getMetadataVal(tempArr[i]);
                    
                }
                
                tempText = tempArr.join(' ');
                
                //set the innerHTML for the last(output) textarea
                var output = document.getElementById("template-text-output").innerHTML = tempText;
                

                //Download all contents in this textarea
                var finalResult = output;
                var tpl = document.getElementById("link");
                tpl.href = 'data:attachment/text,' + encodeURIComponent(finalResult);
                tpl.target = '_blank';
                tpl.download = '<%=outputName%>';
            }

            function showMoreTags() {
                var val = document.getElementById("button-more-tags").innerHTML;
                var textArea = document.getElementById("test");
                var metaTags = document.getElementById("metadataTagArea");
                var importantTags = document.getElementById("allTagArea");
                val = val.toString();
                if (val === "Show Important Tags") {
                    val = "Show All Tags";
                    document.getElementById("button-more-tags").innerHTML = val;
                    textArea.value = metaTags.value;
                } else {
                    val = "Show Important Tags";
                    document.getElementById("button-more-tags").innerHTML = val;
                    textArea.value = importantTags.value;
                }

                if(document.getElementById("filterInput").value !== ""){
                    filterTags();
                }
            }

            // functions to control the loading gif visibility  
            function loadInvisible(){
                loader.style.visibility = 'hidden';    
            }

            function loaderActivate(){
                loader.style.visibility = 'visible';
            }


            $("#template-text").keyup(function(){
                
                setOutput();
            });


            $("#filterInput").keyup(function(){
                filterTags();
            });

            function filterTags(){
                let filterValue = document.getElementById("filterInput").value;
                let dataTagField = (document.getElementById("button-more-tags").innerHTML === "Show All Tags")
                                     ? document.getElementById("metadataTagArea").value:document.getElementById("allTagArea").value;

            
                let dataLines = dataTagField.split("\n");

                if(filterValue !== "" && filterValue.length > 2){
                    var filteredArray = [];
                    

                    for(line in dataLines){
                        if(dataLines[line].toLowerCase().indexOf(filterValue.toLowerCase()) > -1){filteredArray.push(dataLines[line]);}
                    }

                    // set the new field
                    document.getElementById("test").value = filteredArray.join("\n");
                    
                }else{
                    document.getElementById("test").value = dataTagField;
                }
            }


            // make sure the loader is invisible on pageshow
            $(window).bind('pageshow',function(event){
                if(event.originalEvent.persisted){
                    loadInvisible();
                }
            });
            
            loadInvisible();
            setOutput();
            getMetadata();
            getAllTags();
            showMoreTags();
            
            //setInterval(output, 1000);
        </script>
    </body>
</html>